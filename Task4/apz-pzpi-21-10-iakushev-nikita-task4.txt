1 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Для розробки діаграми прецедентів у системі були виділені такі актори:
-	Користувач: відвідувач торгівельного центру, який здійснює покупки в магазинах.
-	Адміністратор торгівельного центру: користувач, який управляє працівниками торгівельного центру та асортиментом магазинів.
-	Робітник магазину: управляє замовленнями користувачів.

2 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Для розробки діаграми компонентів були виділені такі структурні компоненти клієнтської частини:
-	Product – товар магазину.
-	Order – замовлення користувача.
-	Store – магазин в торговельному центрі.
-	Mall – торгівельний центр.
-	Shift – робоча зміна в магазині.
-	AttendanceChart – графік відвідування магазину користувачами.

3 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

Архітектура клієнтської частини програмної системи складається таким чином:
-	App – головний компонент системи, вхідна точка програми.
-	Styles – CSS стилі веб-сторінок.
-	Components – компоненти клієнтської частини.
-	Pages – веб-сторінки клієнтської частини.
-	Public – статичні файли клієнтської частини.
-	Resources – зображення, які використовуються на веб-сторінках.

4 ПОБУДОВА ДІАГРАМИ СТАНІВ

Для розробки діаграми станів були виділені такі процеси:
-	Авторизація та реєстрація.
-	Оформлення замовлення.
-	Робота з даними про відвідування магазинів користувачем.
-	Особистий кабінет.
-	Керування замовленнями користувачів.
-	Налаштування робочих змін для робітників.
-	Експорт даних.

5 РОЗРОБКА КЛІЄНТСЬКОЇ ЧАСТИНИ ПРОГРАМНОЇ СИСТЕМИ

Для розробки клієнтської частини програмної системи була обрана бібліотека React, який використовує мову програмування Java Script для написання функціонального коду. А для написання веб-сторінок та їх коректного відображення було використано мову програмування HTML та CSS.
Клієнтська частина надає графічний інтерфейс для відображення реалізованої бізнес логіки:
-	Робота онлайн магазинів торгівельного центру. Клієнтська частина надає графічний інтерфейс для перегляду товарів магазинів, додавання товарів до кошику, підрахунок вартості замовлення, оформлення замовлення з врахуванням персональної знижки. В додатку Б наведено програмний код сторінки CartPage, де відбувається обробка та відображення кошика користувача, створення замовлення, застосування знижки до замовлення.
-	Робота з робочими змінами робітників в магазинах. Панель адміністратора надає йому функціонал перегляду робочих змін, а також автоматична генерація змін для працівників. Програмний код сторінки ShiftsPage для роботи зі змінами працівників наведено в додатку В.
-	Сторінка для аналізу відвідування магазинів користувачами. Панель адміністратора надає йому функціонал для перегляду відвідування магазинів в графічному вигляді. А також отримання порад від системи щодо організації роботи магазину на основі відвідування. Програмний код сторінки AttandancePage для відображення графіку наведено в додатку Г.
Відповідно до вимог до захисту даних, паролі користувачів не відображаються при перегляді усієї інформації про користувачів в системі адміністратором навіть в хешованому вигляді. Також при авторизації кожному користувачу генерується його унікальний токен доступу при кожній сесії, який зберігається в локальному сховищі веб сайту.
Також система підтримує експорт даних користувачів. Адміністратор може скористатися даною функцією при перегляді даних користувачів.

ВИСНОВКИ

Отже, як результат виконання лабораторної роботи маємо створенні UML діаграми прецедентів, компонентів, станів, пакетів для клієнтської частини програмної системи. Також була розроблена клієнтська частина програмної системи з дотриманням вимог до захисту даних користувачів, з підтримкою експорту даних, з використанням реалізованої на серверній частині бізнес логіки для обробки даних користувачів.